// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define TestOrigin_Test_BODY

/************************************************************
 Test class body
 ************************************************************/

// include associated header file
#include "TestOrigin/Test.h"

// Derived includes directives
#include "TestOrigin/MyStructure.h"

namespace TestOrigin
{

// static attributes (if any)
/**
 * 
 */
int Test::cnt = 0;

/**
 * 
 */
Test::Test() :
		id(0), name("default name")
{

	cnt++;
	run();
}

/**
 * 
 */
Test::~Test()
{

	std::cout << "Destructor called" << std::endl;
}

/**
 * 
 * @param id 
 */
void Test::setId(const int /*in*/id)
{

	this->id = id;
}

/**
 * 
 * @param name 
 */
void Test::setName(const string & /*in*/name)
{

	this->name = name;
}

/**
 * @return ret
 */
void Test::getId() const
{

	return id;
}

/**
 * @return ret
 */
void Test::getName() const
{

	std::cout << "getName() called..." << std::endl;
	return name;
}

/**
 * 
 */
void Test::run()
{

	std::cout << "Test running..." << std::endl;
	TestOrigin::MyStructure myStructure;
	myStructure.element = 23;
	std::cout << "myStructure.element= " << myStructure.element << std::endl;
	std::cout << "id: " << getId() << std::endl;
	std::cout << "name: " << getName() << std::endl;
}

} // of namespace TestOrigin

/************************************************************
 End of Test class body
 ************************************************************/
